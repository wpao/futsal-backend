services:
  database:
    image: postgres:latest
    container_name: futsal-postgres
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5433:5432"
    volumes:
      - futsal_pgdata:/var/lib/postgresql/data
    networks:
      - futsal-network

  backend:
    build: .
    image: albaeud/futsal-backend
    container_name: futsal-backend
    restart: always
    depends_on:
      - database
    environment:
      PORT: 3000
      DATABASE_URL: "postgres://myuser:mypassword@database:5432/mydatabase"
      JWT_SECRET: "22JWTSECRET"
      # - .env 
    ports:
      - "3000:3000"
      # - "${PORT}:${PORT}" 
    networks:
      - futsal-network

volumes:
  futsal_pgdata:

networks:
  futsal-network:
    external: true


# services:
#   database:
#     image: postgres:latest
#     container_name: futsal-postgres
#     restart: always
#     environment:
#       POSTGRES_USER: myuser
#       POSTGRES_PASSWORD: mypassword
#       POSTGRES_DB: mydatabase
#     ports:
#       - "5433:5432"
#     volumes:
#       - futsal_pgdata:/var/lib/postgresql/data
#     networks:
#       - futsal-network

#   backend:
#     build: .
#     # command: ["sh", "-c", "pnpm prisma generate && pnpm run build && node dist/index.js"]
#     image: albaeud/futsal-backend
#     container_name: futsal-backend
#     restart: always
#     depends_on:
#       - database
#     environment:
#       # PORT: 3000
#       # DATABASE_URL: "postgres://myuser:mypassword@database:5432/mydatabase"
#       # JWT_SECRET: "22JWTSECRET"
#       - .env # jika menggunakan file .env
#     ports:
#       # - "3000:3000"
#       - "${PORT}:${PORT}" # jika menggunakan file .env
#     networks:
#       - futsal-network

# volumes:
#   futsal_pgdata:

# networks:
#   futsal-network:
#     external: true